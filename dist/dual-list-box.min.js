!function($){function addElementsViaJSON(options,selected){var multipleTextFields=!1;if(options.text.indexOf(":")>-1){var textToUse=options.text.split(":");textToUse.length>1&&(multipleTextFields=!0)}$.getJSON(options.uri,function(json){$.each(json,function(key,item){var text="";multipleTextFields?textToUse.forEach(function(entry){text+=item[entry]+" "}):text=item[options.text];var isSelected=selected.some(function(e){return e[options.value]===item[options.value]||e===item[options.value]})===!0;isSelected?$(options.element).find("option[value="+item[options.value]+"]").attr("selected",!0):$("<option>",{value:item[options.value],text:text,selected:isSelected}).appendTo(options.element)}),construct(options)})}function addListeners(options){var unselected=$(options.parentElement+" .unselected"),selected=$(options.parentElement+" .selected");$(options.parentElement).find("button").bind("click",function(){switch($(this).data("type")){case"str":unselected.find("option:selected").appendTo(selected),$(this).prop("disabled",!0);break;case"atr":(unselected.find("option").length>=options.maxAllBtn&&confirm(options.warning)||unselected.find("option").length<options.maxAllBtn)&&unselected.find("option").each(function(){$(this).isVisible()&&$(this).remove().appendTo(selected)});break;case"stl":selected.find("option:selected").remove().appendTo(unselected),$(this).prop("disabled",!0);break;case"atl":(selected.find("option").length>=options.maxAllBtn&&confirm(options.warning)||selected.find("option").length<options.maxAllBtn)&&selected.find("option").each(function(){$(this).isVisible()&&$(this).remove().appendTo(unselected)})}unselected.filterByText($(options.parentElement+" .filter-unselected"),options.timeout,options.parentElement).scrollTop(0).sortOptions(),selected.filterByText($(options.parentElement+" .filter-selected"),options.timeout,options.parentElement).scrollTop(0).sortOptions(),handleMovement(options),selected.trigger("change")}),$(options.parentElement).closest("form").submit(function(){selected.find("option").prop("selected",!0)}),$(options.parentElement).find('input[type="text"]').keypress(function(e){13===e.which&&event.preventDefault()}),selected.filterByText($(options.parentElement+" .filter-selected"),options.timeout,options.parentElement).scrollTop(0).sortOptions(),unselected.filterByText($(options.parentElement+" .filter-unselected"),options.timeout,options.parentElement).scrollTop(0).sortOptions()}function construct(options){createDualListBox(options),parseStubListBox(options),addListeners(options)}function countElements(parentElement){var countUnselected=0,countSelected=0;$(parentElement+" .unselected").find("option").each(function(){$(this).isVisible()&&countUnselected++}),$(parentElement+" .selected").find("option").each(function(){$(this).isVisible()&&countSelected++}),$(parentElement+" .unselected-count").text(countUnselected),$(parentElement+" .selected-count").text(countSelected),toggleButtons(parentElement)}function countArea(options,className){return"<small> "+options.beforeCount+options.showingText+'<span class="'+className+'"></span>'+options.afterCount+"</small>"}function createDualListBox(options){$(options.element).parent().attr("id",options.parent);var idForInput=null!=options.id?" id='"+options.id+"'":"";$(options.parentElement).addClass("row").append((0==options.horizontal?'   <div class="col-md-5">':'   <div class="col-md-6">')+'       <h4><span class="unselected-title"></span> '+countArea(options,"unselected-count")+'</h4>       <input class="filter form-control filter-unselected" type="text" placeholder="'+options.filterText+'" style="margin-bottom: 5px;">'+(0==options.horizontal?"":createHorizontalButtons(1,options.moveAllBtn))+'       <select class="unselected '+options.selectClass+'" style="height: 200px; width: 100%;" multiple></select>   </div>'+(0==options.horizontal?createVerticalButtons(options.moveAllBtn):"")+(0==options.horizontal?'   <div class="col-md-5">':'   <div class="col-md-6">')+'       <h4><span class="selected-title"></span> '+countArea(options,"selected-count")+'</h4>       <input class="filter form-control filter-selected" type="text" placeholder="'+options.filterText+'" style="margin-bottom: 5px;">'+(0==options.horizontal?"":createHorizontalButtons(2,options.moveAllBtn))+'       <select class="selected '+options.selectClass+'" style="height: 200px; width: 100%;" multiple '+idForInput+"></select>   </div>"),$(options.parentElement+" .selected").prop("name",$(options.element).prop("name")),$(options.parentElement+" .unselected-title").text(options.availableText+" "+options.title),$(options.parentElement+" .selected-title").text(options.selectedText+" "+options.title),$("["+idForInput+"]").change(function(eventObject){options.changeCallback(eventObject)})}function createHorizontalButtons(number,copyAllBtn){return 1==number?(copyAllBtn?'       <button type="button" class="btn btn-default atr" data-type="atr" style="margin-bottom: 5px;"><span class="glyphicon glyphicon-list"></span> <span class="glyphicon glyphicon-chevron-right"></span></button>':"")+'       <button type="button" class="btn btn-default '+(copyAllBtn?"pull-right col-md-6":"col-md-12")+' str" data-type="str" style="margin-bottom: 5px;" disabled><span class="glyphicon glyphicon-chevron-right"></span></button>':'       <button type="button" class="btn btn-default '+(copyAllBtn?"col-md-6":"col-md-12")+' stl" data-type="stl" style="margin-bottom: 5px;" disabled><span class="glyphicon glyphicon-chevron-left"></span></button>'+(copyAllBtn?'       <button type="button" class="btn btn-default col-md-6 pull-right atl" data-type="atl" style="margin-bottom: 5px;"><span class="glyphicon glyphicon-chevron-left"></span> <span class="glyphicon glyphicon-list"></span></button>':"")}function createVerticalButtons(copyAllBtn){return'   <div class="col-md-2 center-block" style="margin-top: '+(copyAllBtn?"80px":"130px")+'">'+(copyAllBtn?'       <button type="button" class="btn btn-default col-md-8 col-md-offset-2 atr" data-type="atr" style="margin-bottom: 10px;"><span class="glyphicon glyphicon-list"></span> <span class="glyphicon glyphicon-chevron-right"></span></button>':"")+'       <button type="button" class="btn btn-default col-md-8 col-md-offset-2 str" data-type="str" style="margin-bottom: 10px;" disabled><span class="glyphicon glyphicon-chevron-right"></span></button>       <button type="button" class="btn btn-default col-md-8 col-md-offset-2 stl" data-type="stl" style="margin-bottom: 10px;" disabled><span class="glyphicon glyphicon-chevron-left"></span></button>'+(copyAllBtn?'       <button type="button" class="btn btn-default col-md-8 col-md-offset-2 atl" data-type="atl" style="margin-bottom: 10px;"><span class="glyphicon glyphicon-chevron-left"></span> <span class="glyphicon glyphicon-list"></span></button>':"")+"   </div>"}function handleMovement(options){$(options.parentElement+" .unselected").find("option:selected").prop("selected",!1),$(options.parentElement+" .selected").find("option:selected").prop("selected",!1),$(options.parentElement+" .filter").val(""),$(options.parentElement+" select").find("option").each(function(){$(this).show()}),countElements(options.parentElement)}function parseStubListBox(options){var textIsTooLong=!1;$(options.element).find("option").text(function(i,text){if($(this).data("title",text),text.length>options.textLength)return textIsTooLong=!0,text.substr(0,options.textLength)+"..."}).each(function(){textIsTooLong&&$(this).prop("title",$(this).data("title")),$(this).is(":selected")?$(this).appendTo(options.parentElement+" .selected"):$(this).appendTo(options.parentElement+" .unselected")}),$(options.element).remove(),handleMovement(options)}function toggleButtons(parentElement){$(parentElement+" .unselected").change(function(){$(parentElement+" .str").prop("disabled",!1)}),$(parentElement+" .selected").change(function(){$(parentElement+" .stl").prop("disabled",!1)}),0==$(parentElement+" .unselected").has("option").length?($(parentElement+" .atr").prop("disabled",!0),$(parentElement+" .str").prop("disabled",!0)):$(parentElement+" .atr").prop("disabled",!1),0==$(parentElement+" .selected").has("option").length?($(parentElement+" .atl").prop("disabled",!0),$(parentElement+" .stl").prop("disabled",!0)):$(parentElement+" .atl").prop("disabled",!1)}$.fn.DualListBox=function(paramOptions,selected){return this.each(function(){var defaults={element:$(this).context,uri:"local.json",value:"id",text:"name",title:"Example",json:!0,timeout:500,horizontal:!1,textLength:45,moveAllBtn:!0,maxAllBtn:500,selectClass:"form-control",warning:"Are you sure you want to move this many items? Doing so can cause your browser to become unresponsive.",availableText:"Available",selectedText:"Selected",beforeCount:"- ",afterCount:"",showingText:"showing",filterText:"Filter",changeCallback:function(){}},htmlOptions={element:$(this).context,uri:$(this).data("source"),value:$(this).data("value"),text:$(this).data("text"),title:$(this).data("title"),json:$(this).data("json"),timeout:$(this).data("timeout"),horizontal:$(this).data("horizontal"),textLength:$(this).data("textLength"),moveAllBtn:$(this).data("moveAllBtn"),maxAllBtn:$(this).data("maxAllBtn"),selectClass:$(this).data("selectClass"),availableText:$(this).data("availableText"),selectedText:$(this).data("selectedText"),beforeCount:$(this).data("beforeCount"),afterCount:$(this).data("afterCount"),showingText:$(this).data("showingText"),filterText:$(this).data("filterText"),id:$(this).attr("id")},options=$.extend({},defaults,htmlOptions,paramOptions);$.each(options,function(i,item){if(void 0===item||null===item)throw"DualListBox: "+i+" is undefined."}),options.parent="dual-list-box-"+options.title.replace(/ /g,"_"),options.parentElement="#"+options.parent,selected=$.extend([{}],selected),$.each(options.element.options,function(idx,anOption){selected.push(anOption.value)}),options.json?addElementsViaJSON(options,selected):construct(options)})},$.fn.filterByText=function(textBox,timeout,parentElement){return this.each(function(){var select=this,options=[];$(select).find("option").each(function(){options.push({value:$(this).val(),text:$(this).text()})}),$(select).data("options",options),$(textBox).bind("change keyup",function(){RegExp.escape=function(value){return value.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&")},delay(function(){var options=$(select).data("options"),search=$.trim($(textBox).val()),regex=new RegExp(RegExp.escape(search),"gi");$.each(options,function(i){null===options[i].text.match(regex)?$(select).find($('option[value="'+options[i].value+'"]')).hide():$(select).find($('option[value="'+options[i].value+'"]')).show()}),countElements(parentElement)},timeout)})})},$.fn.isVisible=function(){return!("hidden"==$(this).css("visibility")||"none"==$(this).css("display"))},$.fn.sortOptions=function(){return this.each(function(){$(this).append($(this).find("option").remove().sort(function(a,b){var at=$(a).text(),bt=$(b).text();return at>bt?1:at<bt?-1:0}))})};var delay=function(){var timer=0;return function(callback,ms){clearTimeout(timer),timer=setTimeout(callback,ms)}}()}(jQuery);